version: 2
jobs:
  build:
    working_directory: ~/ruby-client
    docker:
      - image: circleci/ruby:2.2
    steps:
      - checkout
      - setup_remote_docker
#      - restore_cache:
#          key: ruby-client-{{ checksum "Gemfile.lock" }}
      - run:
          name: Start SEED instance and retrieve seed.json
          command: |
            docker volume create --name=seed_pgdata
            docker volume create --name=seed_media
            docker-compose -f ./spec/docker/seed-docker-compose.yml build --pull
            docker-compose -f ./spec/docker/seed-docker-compose.yml up -d
            # Run the tests (and support scripts) in another container because the root container does not have access
            # to the remote_docker containers
            docker-compose -f ./spec/docker/seed-docker-compose.yml run test_container curl --retry 18 --retry-delay 10 -v http://web:80
            docker-compose -f ./spec/docker/seed-docker-compose.yml run web ./manage.py create_test_user_json --username user@seed-platform.org --host http://web > seed.json
      - run:
          name: Rerun build for test_container with the added seed.json file
          command: docker-compose -f spec/docker/seed-docker-compose.yml build test_container
      - run: docker-compose -f ./spec/docker/seed-docker-compose.yml run test_container /app/spec/docker/run_tests.sh
      - run: docker-compose -f ./spec/docker/seed-docker-compose.yml stop
      #      - save_cache:
      #          key: ruby-client-{{ checksum "Gemfile.lock" }}
      #          paths:
      #            - vendor/bundle


